version: '3.3'

services:
  pg:
    image: {{ custom_image_repo }}bitnami/postgresql-repmgr:14
    container_name: pg
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS: 0
      POSTGRESQL_POSTGRES_PASSWORD: adminpassword
      POSTGRESQL_DATABASE: keycloak
      POSTGRESQL_USERNAME: keycloak
      POSTGRESQL_PASSWORD: kcpassword
      REPMGR_USERNAME: repmgr
      REPMGR_PASSWORD: repmgrpassword
      REPMGR_PRIMARY_HOST: {{ groups['all'][0] }}
      REPMGR_PRIMARY_PORT: 5432
      REPMGR_PARTNER_NODES: "{{ groups['all'] | join(',') }}"
      REPMGR_NODE_NAME: "{{ inventory_hostname }}"
      REPMGR_NODE_NETWORK_NAME: "{{ inventory_hostname }}"
    networks:
      - kc-network

    volumes:
      - "{{ pg_data_dir }}:/bitnami/postgresql"

    extra_hosts:
{% for item in groups['all'] %}
      - "{{ item }}:{{ hostvars[item]['ansible_host'] }}"
{% endfor %}

  pghc:
    image: {{ custom_image_repo }}abexamir/pghc:f58e74adaf89127b4c3dc406dc12d596ada9b96c
    container_name: pghc
    expose:
      - "8080"
    environment:
      - POSTGRES_HOST=pg
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=adminpassword
    networks:
      - kc-network

  pgpool:
    image: {{ custom_image_repo }}bitnami/pgpool:4.5.0
    container_name: pgpool
    restart: always
    ports:
      - "5432"
    environment:
      PGPOOL_SR_CHECK_USER: repmgr
      PGPOOL_SR_CHECK_PASSWORD: repmgrpassword
      PGPOOL_POSTGRES_USERNAME: postgres
      PGPOOL_POSTGRES_PASSWORD: adminpassword
      PGPOOL_ADMIN_USERNAME: admin
      PGPOOL_ADMIN_PASSWORD: adminpassword
      PGPOOL_ENABLE_LDAP: "no"
      PGPOOL_ENABLE_LOAD_BALANCING: "no"
      PGPOOL_BACKEND_NODES: "{% for item in groups['all'] %}{{ loop.index0 }}:{{ item }}:5432{% if not loop.last %}, {% endif %}{% endfor %}"
      PGPOOL_AUTO_FAILBACK: "yes"
      PGPOOL_BACKEND_APPLICATION_NAMES: "{{ groups['all'] | join(',') }}"

    networks:
      - kc-network

    extra_hosts:
{% for item in groups['all'] %}
      - "{{ item }}:{{ hostvars[item]['ansible_host'] }}"
{% endfor %}

  keycloak:
    image: {{ custom_image_repo | default('quay.io/') }}keycloak/keycloak:legacy
    container_name: keycloak
    restart: always
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: pgpool
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_SCHEMA: public
      DB_PASSWORD: adminpassword
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      PROXY_ADDRESS_FORWARDING: "true"
    depends_on:
      - pgpool
    networks:
      - kc-network

{% if use_custom_certs == "no" %}

  certbot:
    image: {{ custom_image_repo }}certbot/certbot
    container_name: certbot
    restart:
    volumes:
      - ./certs/letsencrypt:/etc/letsencrypt
      - /tmp/acme-challenge:/tmp/acme-challenge
    entrypoint: ""
    command: sh -c "certbot certonly -n --standalone -w /tmp/acme-challenge -d {{ hostvars[inventory_hostname]['domain'] }} --text --agree-tos --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges=http {% if letsencrypt_email %} -m {{ letsencrypt_email }}{% endif %}"
    ports:
      - "80:80"
    environment:
      - TERM=xterm
    networks:
      - kc-network

{% endif %}

  nginx:
    image: {{ custom_image_repo }}nginx:stable
    container_name: nginx
    restart: always
    ports:
      - "443:443"
      - "8080:8080"
      - "8443:8443"
      - "9000:9000"
    depends_on:
      - keycloak
    networks:
      - kc-network
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
{% if use_custom_certs == "yes" %}
      - ./certs/custom/:/etc/ssl/custom/
{% else %}
      - ./certs/letsencrypt:/etc/letsencrypt
{% endif %}


networks:
  kc-network:
    driver: bridge
{% if custom_docker_network_cidr is defined %}
    ipam:
      config:
        - subnet: {{ custom_docker_network_cidr }}
{% endif %}
